# Generated by Django 2.1.11 on 2020-09-10 17:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='API',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=100, verbose_name='接口名称')),
                ('body', models.TextField(verbose_name='主体信息')),
                ('url', models.CharField(max_length=200, verbose_name='请求地址')),
                ('method', models.CharField(max_length=10, verbose_name='请求方式')),
                ('relation', models.IntegerField(verbose_name='节点id')),
            ],
            options={
                'verbose_name': '接口信息',
                'verbose_name_plural': '接口信息',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=500, verbose_name='用例名称')),
                ('relation', models.IntegerField(verbose_name='节点id')),
                ('length', models.IntegerField(verbose_name='API个数')),
                ('tag', models.IntegerField(choices=[(1, '冒烟用例'), (2, '集成用例'), (3, '监控脚本')], default=2, verbose_name='用例标签')),
            ],
            options={
                'verbose_name': '用例信息',
                'verbose_name_plural': '用例信息',
            },
        ),
        migrations.CreateModel(
            name='CaseStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=100, verbose_name='api名称')),
                ('body', models.TextField(verbose_name='主体信息')),
                ('url', models.CharField(max_length=300, verbose_name='请求地址')),
                ('method', models.CharField(max_length=10, verbose_name='请求方式')),
                ('step', models.IntegerField(verbose_name='api顺序')),
                ('apiId', models.IntegerField(default=0, verbose_name='所属api_id')),
                ('case', models.ForeignKey(help_text='所属case', on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Case')),
            ],
            options={
                'verbose_name': '用例信息 Step',
                'verbose_name_plural': '用例信息 Step',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=100, verbose_name='环境名称')),
                ('body', models.TextField(verbose_name='主体信息')),
                ('base_url', models.CharField(blank=True, max_length=100, null=True, verbose_name='请求地址')),
            ],
            options={
                'verbose_name': '配置信息',
                'verbose_name_plural': '配置信息',
            },
        ),
        migrations.CreateModel(
            name='HostIP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(help_text='环境名称', max_length=20)),
                ('hostInfo', models.TextField(help_text='环境信息详情')),
                ('base_url', models.URLField(blank=True, help_text='环境根地址', null=True)),
            ],
            options={
                'verbose_name': 'HOST配置',
                'verbose_name_plural': 'HOST配置',
            },
        ),
        migrations.CreateModel(
            name='LockFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('lock_type', models.CharField(choices=[(1, '测试数据')], max_length=2, verbose_name='锁定哪个信息表')),
                ('file_id', models.IntegerField(verbose_name='锁定文件的id')),
            ],
            options={
                'verbose_name': '锁定文件信息表',
                'verbose_name_plural': '锁定文件信息表',
                'default_permissions': ('add',),
            },
        ),
        migrations.CreateModel(
            name='ModelWithFileField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=50)),
                ('file', models.FileField(blank=True, null=True, unique=True, upload_to='testdatas')),
                ('relation', models.IntegerField(default=1, verbose_name='节点id')),
                ('excel_tree', models.TextField(blank=True, null=True, verbose_name='excel的级联数据')),
            ],
            options={
                'verbose_name': '文件信息表',
                'verbose_name_plural': '文件信息表',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='项目名称')),
                ('desc', models.CharField(max_length=100, verbose_name='简要介绍')),
                ('responsible', models.CharField(max_length=20, verbose_name='负责人')),
            ],
            options={
                'verbose_name': '项目信息',
                'verbose_name_plural': '项目信息',
            },
        ),
        migrations.CreateModel(
            name='Pycode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('code', models.TextField(default='# _*_ coding:utf-8 _*_', verbose_name='python代码')),
                ('name', models.CharField(max_length=30)),
                ('desc', models.CharField(blank=True, max_length=100, null=True, verbose_name='简要介绍')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project')),
            ],
            options={
                'verbose_name': '驱动文件库',
                'verbose_name_plural': '驱动文件库',
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree', models.TextField(default=[], verbose_name='结构主题')),
                ('type', models.IntegerField(default=1, verbose_name='树类型')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project')),
            ],
            options={
                'verbose_name': '树形结构关系',
                'verbose_name_plural': '树形结构关系',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=100, verbose_name='报告名称')),
                ('type', models.IntegerField(choices=[(1, '调试'), (2, '异步'), (3, '定时')], verbose_name='报告类型')),
                ('summary', models.TextField(verbose_name='简要主体信息')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project')),
            ],
            options={
                'verbose_name': '测试报告',
                'verbose_name_plural': '测试报告',
            },
        ),
        migrations.CreateModel(
            name='ReportDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=100, verbose_name='报告名称')),
                ('summary', models.TextField(verbose_name='主体信息')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project')),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Report')),
            ],
            options={
                'verbose_name': '测试报告详情',
                'verbose_name_plural': '测试报告详情',
            },
        ),
        migrations.CreateModel(
            name='Variables',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('key', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=1024)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project')),
            ],
            options={
                'verbose_name': '全局变量',
                'verbose_name_plural': '全局变量',
            },
        ),
        migrations.AddField(
            model_name='modelwithfilefield',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project'),
        ),
        migrations.AddField(
            model_name='lockfiles',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project'),
        ),
        migrations.AddField(
            model_name='hostip',
            name='project',
            field=models.ForeignKey(help_text='所属项目', on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project'),
        ),
        migrations.AddField(
            model_name='config',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project'),
        ),
        migrations.AddField(
            model_name='case',
            name='project',
            field=models.ForeignKey(help_text='所属项目', on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project'),
        ),
        migrations.AddField(
            model_name='api',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fastrunner.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='pycode',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='modelwithfilefield',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='lockfiles',
            unique_together={('project', 'lock_type', 'file_id')},
        ),
        migrations.AlterUniqueTogether(
            name='hostip',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='config',
            unique_together={('project', 'name')},
        ),
    ]
